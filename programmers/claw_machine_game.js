/*
문제 설명 크레인 인형 뽑기 게임
2차원 배열을 돌며 인형을 뽑는데 뽑은 인형은 바구니에 넣는다
근데 바구니에 4번, 2번 인형이 들어가 있고 이번에 뽑은 인형도 2라면
둘 다 터져서 바구니에는 4번만 남게된다
이 때 인형을 뽑으면서 사라진 인형의 개수를 구해준다

[제한사항]
board 배열은 2차원 배열로 크기는 "5 x 5" 이상 "30 x 30" 이하입니다.
board의 각 칸에는 0 이상 100 이하인 정수가 담겨있습니다.
0은 빈 칸을 나타냅니다.
1 ~ 100의 각 숫자는 각기 다른 인형의 모양을 의미하며 같은 숫자는 같은 모양의 인형을 나타냅니다.
moves 배열의 크기는 1 이상 1,000 이하입니다.
moves 배열 각 원소들의 값은 1 이상이며 board 배열의 가로 크기 이하인 자연수입니다.

입출력 예
board	moves	result
[[0,0,0,0,0],[0,0,1,0,3],[0,2,5,0,1],[4,2,4,4,2],[3,5,1,3,1]]	[1,5,3,5,1,2,1,4]	4
*/

function solution(board, moves) {
    let answer = 0;
    let draw = []; // 뽑은 인형을 넣어줄 바구니
    for (let i = 0; i < moves.length; i++) { // 가로는 무브
      for (let j = 0; j < board.length; j++) { // 세로는 j로 돌아준다
        let now = moves[i]-1; // 지금 가로 위치는 moves[i]-1 
        if (board[j][now] === 0) continue // 0이면 다시 아래로 내려간다
      
        if (board[j][now] === draw[draw.length-1]){ // 바구니에 있는 거랑 뽑은 거랑 같으면
          answer += 2; // 둘다 터지니까 answer에 +2 해주고
          draw.pop(); // 바구니에 들어있던 인형을 지워준다
        } else {
          draw.push(board[j][now]); // 바구니에 인형을 넣어준다
        }
        board[j][now] = 0 // 지금 탐색한 자리는 0으로 바꿔주고
        break // break를 안걸면 인형을 뽑고 나서도 계속 아래로 내려가기 때문에 break로 탈출해준다.
      }
  }
  return answer;
  } 